///////////////////////////////////Ecenario1

function vaciarCarritoConTotal() {
    let total = 0;
    const carrito = [
        {
            articulo: "leche",
            precio: 18.7,
        },
        {
            articulo: "pan",
            precio: 44.9,
        },
        {
            articulo: "manzanas",
            precio: 33.5,
        },
    ];

    // respuesta ecenario1
    const articulos = carrito.length;

    for (let i = 0; i < articulos; i++) {
        const articulo = carrito.shift();
        total += articulo.precio;
    }

    console.log(carrito, total);
}


/////////////Ecenario2/////////////////////
function cuentaDeAlumnos() {
    const grupoA = [
        "Alejandro Hernandez",
        "Emanuel Pedroza",
        "Mayra Hernandez",
        "Lizeth Sanchez",
        "Georgina Molina",
        "William Zamora",
        "Eduardo Montelongo",
        "Pablo Luna",
        "Fabricio Alba",
        "Thania Alba",
        "Paula Hernandez",
        "Jorge Hernandez",
        "Erika Hernandez",
        "Beatriz Hernandez",
    ];
    const grupoB = [
        "Alejandro Martinez",
        "Dario Hernandez",
        "Sonia Fernandez",
        "Alejandra Fernandez",
        "Monse Figueroa",
        "Diego Figueroa",
        "Duego Hernandez",
        "Regina Navarro",
        "Emanuel Navarro",
        "Monica Hernandez",
        "Erendira Pompa",
        "Raquel Pacheco",
        "Alberto Pacheco",
        "Magdalena Pacheco",
        "Maria Muñoz",
        "Rodrigo Muñoz",
        "Noe Fernandez",
    ];

    // Respuestas escenario 2
    const gruposUnificados = grupoA.concat(grupoB);
    console.log(gruposUnificados.length);
}


/////////////Ecenario 3
function transmitiendoBatch() {
    const backup = [
        "AAAAAAAAAAA",
        "11010100101",
        "01010101010",
        "11110000000",
        "00001111000",
        "10101010101",
        "11001100110",
        "00110011001",
        "11111111111",
        "00000000000",
        "10000000000",
        "01000000000",
        "11000000000",
        "00100000000",
        "10100000000",
        "01100000000",
        "11100000000",
        "00010000000",
        "10010000000",
        "01010000000",
        "11010000000",
        "00110000000",
        "10110000000",
        "01110000000",
        "11110000000",
        "00001000000",
        "10001000000",
        "01001000000",
        "11001000000",
        "00101000000",
        "10101000000",
        "01101000000",
        "11101000000",
        "00011000000",
        "10011000000",
        "01011000000",
        "11011000000",
        "00111000000",
        "10111000000",
        "01111000000",
        "11111000000",
        "00000100000",
        "10000100000",
        "01000100000",
        "11000100000",
        "00100100000",
        "10100100000",
        "01100100000",
        "11100100000",
        "00010100000",
        "BBBBBBBBBBBB",
        "11010100101",
        "01010101010",
        "11110000000",
        "00001111000",
        "10101010101",
        "11001100110",
        "00110011001",
        "11111111111",
        "00000000000",
        "10000000000",
        "01000000000",
        "11000000000",
        "00100000000",
        "10100000000",
        "01100000000",
        "11100000000",
        "00010000000",
        "10010000000",
        "01010000000",
        "11010000000",
        "00110000000",
        "10110000000",
        "01110000000",
        "11110000000",
        "00001000000",
        "10001000000",
        "01001000000",
        "11001000000",
        "00101000000",
        "10101000000",
        "01101000000",
        "11101000000",
        "00011000000",
        "10011000000",
        "01011000000",
        "11011000000",
        "00111000000",
        "10111000000",
        "01111000000",
        "11111000000",
        "00000100000",
        "10000100000",
        "01000100000",
        "11000100000",
        "00100100000",
        "10100100000",
        "01100100000",
        "11100100000",
        "00010100000",

        "CCCCCCCCCCC",
        "11010100101",
        "01010101010",
        "11110000000",
        "00001111000",
        "10101010101",
        "11001100110",
        "00110011001",
        "11111111111",
        "00000000000",
        "10000000000",
        "01000000000",
        "11000000000",
        "00100000000",
        "10100000000",
        "01100000000",
        "11100000000",
        "00010000000",
        "10010000000",
        "01010000000",
        "11010000000",
        "00110000000",
        "10110000000",
        "01110000000",
        "11110000000",
        "00001000000",
        "10001000000",
        "01001000000",
        "11001000000",
        "00101000000",
        "10101000000",
        "01101000000",
        "11101000000",
        "00011000000",
        "10011000000",
        "01011000000",
        "11011000000",
        "00111000000",
        "10111000000",
        "01111000000",
        "11111000000",
        "00000100000",
        "10000100000",
        "01000100000",
        "11000100000",
        "00100100000",
        "10100100000",
        "01100100000",
        "11100100000",
        "00010100000",

        "DDDDDDDDDDDD",
        "11010100101",
        "01010101010",
        "11110000000",
        "00001111000",
        "10101010101",
        "11001100110",
        "00110011001",
        "11111111111",
        "00000000000",
        "10000000000",
        "01000000000",
        "11000000000",
        "00100000000",
        "10100000000",
        "01100000000",
        "11100000000",
        "00010000000",
        "10010000000",
        "01010000000",
        "11010000000",
        "00110000000",
        "10110000000",
        "01110000000",
        "11110000000",
        "00001000000",
        "10001000000",
        "01001000000",
        "11001000000",
        "00101000000",
        "10101000000",
        "01101000000",
        "11101000000",
        "00011000000",
        "10011000000",
        "01011000000",
        "11011000000",
        "00111000000",
        "10111000000",
        "01111000000",
        "11111000000",
        "00000100000",
        "10000100000",
        "01000100000",
        "11000100000",
        "00100100000",
        "10100100000",
        "01100100000",
        "11100100000",
        "00010100000",
    ];

    let batchSize = parseInt(backup.length / 4);
    let batchPosition = 0;

    for (let i = 1; i < 5; i++) {
        const batchBackup = backup.slice(batchPosition, batchSize * i);
        batchPosition += batchSize;
        console.log(batchBackup, batchBackup.length);
    }
}

transmitiendoBatch();